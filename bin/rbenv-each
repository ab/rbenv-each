#!/usr/bin/env bash
#
# Summary: Execute a command for each Ruby version
#
# Usage: rbenv each [options] <command> [arg1 arg2...]
#
# Execute a command for each Ruby version by setting RBENV_VERSION.
# Failures are collected and reported at the end.
#
# Options:
#    -a, --aliases       Don't skip ruby versions that are aliases (symlinks)
#    -V, --versions VER  Run on VER, a space separated list of versions
#    -h, --help          Print this help message
#    -v, --verbose       Verbose mode: print a header for each version version
#
set -e
[ -n "$RBENV_DEBUG" ] && set -x

# Provide rbenv completions
if [ "$1" = "--complete" ]; then
  echo -v
  echo --verbose
  echo -a
  echo --aliases
  echo -V
  echo --versions
  exit
fi

usage() {
    rbenv-help --usage each >&2
    exit 1
}

verbose=
aliases=
versions=

while [[ $1 == -* ]]; do
    case "$1" in
        -v|--verbose)
            verbose=1
            ;;
        -V|--versions)
            versions="$2"
            shift
            ;;
        -a|--aliases)
            aliases=1
            ;;
        -h|--help)
            rbenv-help each >&2
            exit 0
            ;;
        *)
            usage
            ;;
    esac
    shift
done

if [ $# -lt 1 ]; then
    usage
fi

GRAY=""
RED=""
YELLOW=""
NORMAL=""

if [ -t 1 ]; then
  GRAY="\033[1;30m"
  RED="\033[0;31m"
  YELLOW="\033[0;33m"
  NORMAL="\033[0m"
fi

failed_rubies=""

trap "exit 1" INT

if [ -n "$aliases" ]; then
    opts=
else
    opts="--skip-aliases"
fi

if [ -z "$versions" ]; then
    versions="$(rbenv versions --bare $opts)"
fi

for ruby in $versions; do
  if [ -n "$verbose" ]; then
    header="===[$ruby]==================================================================="
    header="${header:0:72}"
    header="${header/[/[${YELLOW}}"
    header="${header/]/${GRAY}]}"
    echo -e "${GRAY}${header}${NORMAL}"
  fi

  RBENV_VERSION="$ruby" "$@" || failed_rubies="$failed_rubies $ruby"

  [ -n "$verbose" ] && echo
done

if [ -n "$failed_rubies" ]; then
  echo -e "${RED}FAILED IN:${failed_rubies}${NORMAL}"
  exit 1
fi
